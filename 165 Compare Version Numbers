class Solution {
public:
    string fn(string s)
    {
        int n= s.size();
        string f="";
        
        if(n == 0)
            return "";
        
        int start=0;
        
        while(start<n )
        {
            if(s[start]=='0')
                start++;
            else
                break;
        }
        
        for(int i=start ; i<n ;i++)
            f+=s[i];
        
       
        return f;
    }
    int compareVersion(string version1, string version2) {
        
        string f="";
        vector<int> v1;
        vector<int> v2;
        
        for(int i=0;i<version1.size();i++)
        {
            
            
            if(version1[i]=='.' && f.size()!=0)
            {
                string temp = fn(f);
                
                if(temp.size()!=0)
                    v1.push_back(stoi(temp));
                else
                    v1.push_back(0);
                
                f="";
            }
            else
                f+=version1[i];
            
        }
        
        if(f.size()!=0)
        {
            string temp = fn(f);
            
            if(temp.size()!=0)
                v1.push_back(stoi(temp));
            else
                v1.push_back(0);
        }
        
        f="";
        
        for(int i=0;i<version2.size();i++)
        {
            
            
            if(version2[i]=='.' && f.size()!=0)
            {
                string temp = fn(f);
                
                if(temp.size()!=0)
                    v2.push_back(stoi(temp));
                else
                    v2.push_back(0);

                f="";
            }
            else
              f+=version2[i];
            
        }
        
        if(f.size()!=0)
        { 
            string temp = fn(f);
            
            if(temp.size()!=0)
                v2.push_back(stoi(temp));
            else
                v2.push_back(0);
        }
        
       for(int i=0; i < min(v1.size(),v2.size()) ; i++)
       {
           if(v1[i] > v2[i])
                return 1;
           else if(v2[i] > v1[i])
                return -1;
           cout<<v1[i];
       }
        
        if(v1.size() > v2.size())
        {
            int start =v2.size();
            while(start<v1.size() && v1[start]==0)
            {
                start++;
            }
            if(start== v1.size())
                return 0;
            else
                return 1;
        }
        else if(v1.size() < v2.size())
        {
            int start =v1.size();
            while(start<v2.size() && v2[start]==0)
            {
                start++;
            }
            if(start== v2.size())
                return 0;
            else
                return -1;
        }
        else
            return 0;
            
    }
};
