class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        
        int n=intervals.size();
        
        vector<vector< int> > v;
        
        if(newInterval.size()==0)
            return intervals;
        
        if(n==0)
        {
            v.push_back(newInterval);
            return v;
        }
        
        int flag=0;
        
        for(auto itr= intervals.begin();itr!= intervals.end();itr++)
        {
            if(((*itr)[0]) >= newInterval[0])
            {
                intervals.insert(itr ,newInterval);
                flag=1;
                break;
            }
            
        }
        
        if(flag==0)
            intervals.push_back(newInterval);

        v.push_back(intervals[0]);
        
        for(int i=1;i<n+1;i++)
        {
            if(v.back()[1] >= intervals[i][0])
            {
                vector<int> temp= v.back();
                temp[1] = max(temp[1],intervals[i][1]);  
                v.pop_back();
                v.push_back(temp);
            }
            else
                v.push_back(intervals[i]);
               
        }
        return v;
    }
};
