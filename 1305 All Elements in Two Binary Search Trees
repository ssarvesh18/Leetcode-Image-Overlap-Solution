/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void fn(vector<int> &v,struct TreeNode* root)
    {
        if(root==NULL)
            return;
        fn(v,root->left);
        v.push_back(root->val);
        fn(v,root->right);
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
     
        vector<int> v1;
        vector<int> v2;
        vector<int> v3;
        fn(v1,root1);
        fn(v2,root2);
        int i=0;
        int j=0;
        int n=v1.size();
        int m=v2.size();
        
        while(i<n && j<m)
        {
            if(v1[i] > v2[j])
            {
                v3.push_back(v2[j]);
                j++;
            }
            else
            {
                v3.push_back(v1[i]);
                i++;
            }
        }
        
        while(i<n)
        {
            v3.push_back(v1[i]);
            i++;
        }
        
        while(j<m)
        {
            v3.push_back(v2[j]);
            j++;
        }
        return v3;
    }
};
